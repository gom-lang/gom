import { GomToken } from "../../lexer/tokens";

export enum GomRule {
  PROGRAM,
  IMPORT_DECLARATION,
  TYPE_DEFINITION,
  FUNCTION_DECLARATION,
  MAIN_FUNCTION,
  STATEMENT,
  FOR_STATEMENT,
  RETURN_STATEMENT,
  LET_STATEMENT,
  EXPRESSION_STATEMENT,
  GOM_TYPE,
  ARGUMENT_ITEM,
  FUNCTION_RETURN_TYPE,
  EXPR,
  ACCESS,
  CALL,
  COMPARISON,
  SUM,
  QUOT,
  EXPO,
  TERM,
}

export const GOM_GRAMMAR_FIRST_SETS: {
  [key in GomRule]: GomToken[];
} = {
  [GomRule.PROGRAM]: [
    GomToken.IMPORT,
    GomToken.TYPE,
    GomToken.FN,
    GomToken.MAIN,
  ],
  [GomRule.IMPORT_DECLARATION]: [GomToken.IMPORT],
  [GomRule.TYPE_DEFINITION]: [GomToken.TYPE],
  [GomRule.FUNCTION_DECLARATION]: [GomToken.FN],
  [GomRule.MAIN_FUNCTION]: [GomToken.MAIN],
  [GomRule.STATEMENT]: [
    GomToken.LET,
    GomToken.FOR,
    GomToken.RETURN,
    GomToken.IF,
  ],
  [GomRule.FOR_STATEMENT]: [GomToken.FOR],
  [GomRule.RETURN_STATEMENT]: [GomToken.RETURN],
  [GomRule.LET_STATEMENT]: [GomToken.LET],
  [GomRule.EXPRESSION_STATEMENT]: [GomToken.IDENTIFIER],
  [GomRule.GOM_TYPE]: [GomToken.BUILT_IN_TYPE],
  [GomRule.ARGUMENT_ITEM]: [GomToken.IDENTIFIER],
  [GomRule.FUNCTION_RETURN_TYPE]: [GomToken.COLON],
  [GomRule.EXPR]: [
    GomToken.IDENTIFIER,
    GomToken.LPAREN,
    GomToken.NUMLITERAL,
    GomToken.STRLITERAL,
  ],
  [GomRule.ACCESS]: [GomToken.IDENTIFIER],
  [GomRule.CALL]: [GomToken.IDENTIFIER],
  [GomRule.COMPARISON]: [
    GomToken.IDENTIFIER,
    GomToken.NUMLITERAL,
    GomToken.STRLITERAL,
  ],
  [GomRule.SUM]: [
    GomToken.IDENTIFIER,
    GomToken.NUMLITERAL,
    GomToken.STRLITERAL,
  ],
  [GomRule.QUOT]: [
    GomToken.IDENTIFIER,
    GomToken.NUMLITERAL,
    GomToken.STRLITERAL,
  ],
  [GomRule.EXPO]: [
    GomToken.IDENTIFIER,
    GomToken.NUMLITERAL,
    GomToken.STRLITERAL,
  ],
  [GomRule.TERM]: [
    GomToken.IDENTIFIER,
    GomToken.NUMLITERAL,
    GomToken.STRLITERAL,
  ],
};

export const GOM_GRAMMAR_FOLLOW_SETS: {
  [key in GomRule]: GomToken[];
} = {
  [GomRule.PROGRAM]: [GomToken.EOF],
  [GomRule.IMPORT_DECLARATION]: [
    GomToken.IMPORT,
    GomToken.TYPE,
    GomToken.FN,
    GomToken.MAIN,
  ],
  [GomRule.TYPE_DEFINITION]: [GomToken.TYPE, GomToken.FN, GomToken.MAIN],
  [GomRule.FUNCTION_DECLARATION]: [GomToken.TYPE, GomToken.FN, GomToken.MAIN],
  [GomRule.MAIN_FUNCTION]: [GomToken.EOF],
  [GomRule.STATEMENT]: [
    ...GOM_GRAMMAR_FIRST_SETS[GomRule.STATEMENT],
    GomToken.RBRACE,
  ],
  [GomRule.FOR_STATEMENT]: [
    ...GOM_GRAMMAR_FIRST_SETS[GomRule.FOR_STATEMENT],
    GomToken.RBRACE,
  ],
  [GomRule.RETURN_STATEMENT]: [
    ...GOM_GRAMMAR_FIRST_SETS[GomRule.FOR_STATEMENT],
    GomToken.RBRACE,
  ],
  [GomRule.LET_STATEMENT]: [
    ...GOM_GRAMMAR_FIRST_SETS[GomRule.FOR_STATEMENT],
    GomToken.RBRACE,
  ],
  [GomRule.EXPRESSION_STATEMENT]: [
    ...GOM_GRAMMAR_FIRST_SETS[GomRule.FOR_STATEMENT],
    GomToken.RBRACE,
  ],
  [GomRule.GOM_TYPE]: [GomToken.SEMICOLON],
  [GomRule.ARGUMENT_ITEM]: [
    ...GOM_GRAMMAR_FIRST_SETS[GomRule.ARGUMENT_ITEM],
    GomToken.RPAREN,
  ],
  [GomRule.FUNCTION_RETURN_TYPE]: [GomToken.LBRACE],
  [GomRule.EXPR]: [
    GomToken.EQ,
    GomToken.PLUS,
    GomToken.MINUS,
    GomToken.GT,
    GomToken.LT,
    GomToken.GTE,
    GomToken.LTE,
    GomToken.EQEQ,
    GomToken.COMMA,
    GomToken.RPAREN,
    GomToken.SEMICOLON,
  ],
  [GomRule.ACCESS]: [
    GomToken.EQ,
    GomToken.PLUS,
    GomToken.MINUS,
    GomToken.GT,
    GomToken.LT,
    GomToken.GTE,
    GomToken.LTE,
    GomToken.EQEQ,
    GomToken.COMMA,
    GomToken.RPAREN,
    GomToken.SEMICOLON,
  ],
  [GomRule.CALL]: [
    GomToken.EQ,
    GomToken.PLUS,
    GomToken.MINUS,
    GomToken.GT,
    GomToken.LT,
    GomToken.GTE,
    GomToken.LTE,
    GomToken.EQEQ,
    GomToken.COMMA,
    GomToken.RPAREN,
    GomToken.SEMICOLON,
  ],
  [GomRule.COMPARISON]: [
    GomToken.EQ,
    GomToken.PLUS,
    GomToken.MINUS,
    GomToken.GT,
    GomToken.LT,
    GomToken.GTE,
    GomToken.LTE,
    GomToken.EQEQ,
    GomToken.COMMA,
    GomToken.RPAREN,
    GomToken.SEMICOLON,
  ],
  [GomRule.SUM]: [
    GomToken.GT,
    GomToken.LT,
    GomToken.GTE,
    GomToken.LTE,
    GomToken.EQEQ,
  ],
  [GomRule.QUOT]: [GomToken.PLUS, GomToken.MINUS],
  [GomRule.EXPO]: [GomToken.DIV, GomToken.MUL],
  [GomRule.TERM]: [GomToken.EXP],
};
